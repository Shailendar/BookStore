@model BookStore.DA.Book

@{
    ViewBag.Title = "AddOrEdit Book";
}
<div style="margin: 10px 0 10px 0;">
    @if (Model.Id == 0)
    {
        <span class="header">Add Book</span>
    }
    else
    {
        <span class="header">Edit Book</span>
    }
    <hr />
</div>

<div class="row">
    @using (Html.BeginForm("AddOrEdit", "Book", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.HiddenFor(m => m.Id)
        if (!string.IsNullOrEmpty(Model.Error))
        {
            <div style="margin: 10px 0 10px 0;">
                <span class="label label-danger col-md-offset-2">@Model.Error</span>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(m => m.Category, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", new SelectList(Model.CategoryList, "Id", "Name"),
                    "Select Category", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @MaxLength = 50 })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.FilePath, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.FilePath, new { @type = "file", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FilePath, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @rows = "4", @MaxLength = 500 })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.UnitPrice, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.UnitPrice, new
           {
               @class = "form-control",
               @rows = "4",
               @Value = (Model.Id == 0 ? "" : Model.UnitPrice.ToString()),
               @MaxLength = 12
           })
                @Html.ValidationMessageFor(m => m.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Discount, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Discount, new
           {
               @class = "form-control",
               @rows = "4",
               @Value = (Model.Id == 0 ? "" : Model.Discount.ToString()),
               @MaxLength = 12
           })
                @Html.ValidationMessageFor(m => m.Discount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ShippingCost, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ShippingCost, new
           {
               @class = "form-control",
               @rows = "4",
               @Value = (Model.Id == 0 ? "" : Model.ShippingCost.ToString()),
               @MaxLength = 12
           })
                @Html.ValidationMessageFor(m => m.ShippingCost, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Quantity, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Quantity, new
           {
               @class = "form-control",
               @rows = "4",
               @Value = (Model.Id == 0 ? "" : Model.Quantity.ToString()),
               @MaxLength = 12
           })
                @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.DisplayOrder, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.DisplayOrder, new
           {
               @class = "form-control",
               @rows = "4",
               @Value = (Model.Id == 0 ? "" : Model.DisplayOrder.ToString()),
               @MaxLength = 1
           })
                @Html.ValidationMessageFor(m => m.DisplayOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Status, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("Status", new SelectList(Model.BookStatusList, "Id", "Code"),
                    "Select Book Status", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Request.Params["returnUrl"] != null)
                {
                    @Html.ActionLink("Cancel", "Details", "BookInformation", new { Id = Model.Id }, new { role = "button", @class = "btn btn-sm btn-default" })
                }
                else
                {
                    @Html.ActionLink("Cancel", "BookList", null, new { role = "button", @class = "btn btn-sm btn-default" })
                }
                <input type="submit" value="Save" class="btn btn-sm btn-primary" />
            </div>
        </div>
    }
</div>
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
