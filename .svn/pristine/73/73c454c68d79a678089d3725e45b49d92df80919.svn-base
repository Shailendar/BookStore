@model IEnumerable<BookStore.DA.PaymentType>
@{
    ViewBag.Title = "PaymentTypeList";
}
<div style="margin:10px 0 10px 0; ">
    <span class="col-lg-6 pull-left header">Payment Type</span>
    <span class="col-lg-6">
        @Html.ActionLink("Add Payment Type", "AddOrEdit", null, new { @class = "pull-right btn btn-primary btn-sm" })
    </span>
    <div class="clearfix"></div>
</div>

@if (Request.Params["message"] != null)
{
    if (Request.Params["message"].ToString() == "1")
    {
        <div style="margin: 10px 0 10px 0;" class="text-center">
            <span class="label label-success">PaymentType added successfully</span>
        </div>
    }

    else if (Request.Params["message"].ToString() == "2")
    {
        <div style="margin: 10px 0 10px 0;" class="text-center">
            <span class="label label-success">PaymentType updated successfully</span>
        </div>
    }
}
<table class="table table-bordered">
    <thead style="background-color:gray;color:white">
        <tr>
            <td style=" width:8%;text-align:center">S.No</td>
            <td>Payment Type</td>
            <td style="width:10%;text-align:center">Status</td>
            <td style="width:8%;text-align:center">Edit</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td style="text-align: center;">@item.Id</td>
                <td>@item.Type</td>
                <td style="text-align: center;">
                    @if (item.IsActive)
                    {
                        <label class="label label-success">Active</label>
                    }
                    else
                    {
                        <label class="label label-default">Inactive</label>
                    }
                </td>
                <td style="text-align: center;">
                    @Html.ActionLink("Edit", "AddOrEdit", new { PaymentTypeId = item.Id }, new { @class = "btn btn-primary btn-sm" })
                </td>
            </tr>
        }
    </tbody>
</table>
