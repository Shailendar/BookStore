@model BookStore.DA.Customer
@{
    ViewBag.Title = "MyProfile";

}

<div class="well">
    <div class="row">
        @using (Html.BeginForm("AddOrEdit", "MyProfile", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.HiddenFor(m => m.Email)
            @Html.HiddenFor(m => m.Id)

            if (!string.IsNullOrEmpty(Model.Error))
            {
                <div style="margin: 10px 0 10px 0;">
                    <span class="label label-danger col-md-offset-2">@Model.Error</span>
                </div>
            }

            <div class="well" style="background-color:white; ">
                <div>
                    <h3>My Profile</h3>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                    @Html.TextBoxFor(m => m.FirstName, new { @class = " form-control ", @MaxLength = 20 })
                    <div class="col-md-offset-2">
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control ", @MaxLength = 20 })
                    <div class="col-md-offset-2">
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control ", @MaxLength = 20, @disabled = "disabled" })
                    <div class="col-md-offset-2">
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", @MaxLength = 10 })
                    <div class="col-md-offset-2">
                        @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.BirthDate, new { @class = "col-md-2 control-label" })
                    @Html.EditorFor(m => m.BirthDate, new { htmlAttributes = new { @class = "form-control", @Value = Model.BirthDate == null ? "" : Model.BirthDate.Value.ToString("dd-MM-yyyy") } })
                    <div class="col-md-offset-2">
                        @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.ActionLink("cancel", "MyProfile", null, new { role = "button", @class = "btn btn-sm btn-default" })
                        @*<input type="button" value="Cancel" class="btn btn-sm btn-default" />*@
                        <input type="submit" value="Save" class="btn btn-sm btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                maxDate: new Date,
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });
        });
    </script>
}
